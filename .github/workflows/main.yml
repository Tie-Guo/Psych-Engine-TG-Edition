name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndroid:
    name: buildAndroid
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      - name: Restore Previous Cache
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp 4.2.1 > /dev/null
          haxelib install lime 7.9.0
          haxelib install openfl 9.1.0
          haxelib --never install flixel 5.2.2
          haxelib run lime setup flixel
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui
          haxelib install flixel-addons 3.0.2
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install SScript 4.0.1
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd.git
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit
          haxelib git extension-androidtools https://github.com/MaysLastPlay77/extension-androidtools
          haxelib install hxcpp-debug-server
          haxelib list

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set lime 7.9.0
          haxelib set openfl 9.1.0
          haxelib set flixel 5.2.2
          haxelib set flixel-addons 3.0.2
          haxelib set hxcpp 4.2.1
          haxelib set SScript 4.0.1
          haxelib list
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Building
        run: haxelib run lime build android -${{ matrix.arch }}
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: Android
          path: export/release/android/bin/app/build/outputs/apk/debug
  BuildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      
      - name: Restore Previous Cache
        id: cache-build-windows-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          key: cache-windows-build

      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp 4.2.1 > /dev/null
          haxelib install lime
          haxelib install openfl
          haxelib install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib install tjson
          haxelib install hxjsonast
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit
          haxelib install hscript
          haxelib install SScript
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib set hxcpp 4.2.1
          haxelib set hxCodec 2.5.1
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Save Current Cache
        id: cache-build-windows-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          key: cache-windows-build

      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Windows
          path: export/release/windows/bin
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hmm --quiet
          haxelib install SScript
          haxelib run hmm install
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Linux
          path: 'export/release/linux/bin'
  buildMac:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hmm --quiet
          haxelib run hmm install
          haxelib install SScript
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: macBuild
          path: export/release/macos/bin
